{
  "{\"assumptions\":{},\"sourceRoot\":\"/home/virgile/Bureau/dev/graphql-course/graphqk-basics/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/virgile/Bureau/dev/graphql-course/graphqk-basics\",\"filename\":\"/home/virgile/Bureau/dev/graphql-course/graphqk-basics/src/index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/virgile/Bureau/dev/graphql-course/graphqk-basics\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.14.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/virgile/Bureau/dev/graphql-course/graphqk-basics/src/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/virgile/Bureau/dev/graphql-course/graphqk-basics",
      "filename": "/home/virgile/Bureau/dev/graphql-course/graphqk-basics/src/index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/virgile/Bureau/dev/graphql-course/graphqk-basics",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/virgile/Bureau/dev/graphql-course/graphqk-basics/src/index.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/virgile/Bureau/dev/graphql-course/graphqk-basics/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/virgile/Bureau/dev/graphql-course/graphqk-basics/src/",
        "sourceFileName": "index.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _require = require('graphql-yoga'),\n    GraphQLServer = _require.GraphQLServer; // Type Definitions\n\n\nvar typeDefs = \"\\n  type Query {\\n    me: User!\\n    post: Post!\\n  }\\n\\n  type User {\\n      id: ID!\\n      name: String!\\n      email : String!\\n      age: Int\\n  }\\n  type Post{\\n      id: ID!\\n      title: String!\\n      body: String!\\n      published: Boolean!\\n  }\\n\"; // Resolvers\n\nvar resolvers = {\n  Query: {\n    me: function me() {\n      return {\n        id: '123098',\n        name: 'Mike',\n        email: 'mike@exemple.com',\n        age: 29\n      };\n    },\n    post: function post() {\n      return {\n        id: 'p0233',\n        title: 'Je suis le titre du post',\n        body: 'lorem ipsum dolor sit amet, consectet',\n        published: true\n      };\n    }\n  }\n};\nvar server = new GraphQLServer({\n  typeDefs: typeDefs,\n  resolvers: resolvers\n});\nserver.start(function () {\n  console.log('Server is now up and running at http://localhost:4000');\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJHcmFwaFFMU2VydmVyIiwidHlwZURlZnMiLCJyZXNvbHZlcnMiLCJRdWVyeSIsIm1lIiwiaWQiLCJuYW1lIiwiZW1haWwiLCJhZ2UiLCJwb3N0IiwidGl0bGUiLCJib2R5IiwicHVibGlzaGVkIiwic2VydmVyIiwic3RhcnQiLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiOztBQUFBLGVBQTBCQSxPQUFPLENBQUMsY0FBRCxDQUFqQztBQUFBLElBQVFDLGFBQVIsWUFBUUEsYUFBUixDLENBRUE7OztBQUNBLElBQU1DLFFBQVEscVFBQWQsQyxDQW9CQTs7QUFDQSxJQUFNQyxTQUFTLEdBQUc7QUFDaEJDLEVBQUFBLEtBQUssRUFBRTtBQUNMQyxJQUFBQSxFQUFFLEVBQUUsY0FBTTtBQUNOLGFBQU87QUFDSEMsUUFBQUEsRUFBRSxFQUFFLFFBREQ7QUFFSEMsUUFBQUEsSUFBSSxFQUFFLE1BRkg7QUFHSEMsUUFBQUEsS0FBSyxFQUFFLGtCQUhKO0FBSUhDLFFBQUFBLEdBQUcsRUFBRTtBQUpGLE9BQVA7QUFNSCxLQVJJO0FBU0xDLElBQUFBLElBQUksRUFBQyxnQkFBTTtBQUNQLGFBQU87QUFDSEosUUFBQUEsRUFBRSxFQUFFLE9BREQ7QUFFSEssUUFBQUEsS0FBSyxFQUFFLDBCQUZKO0FBR0hDLFFBQUFBLElBQUksRUFBQyx1Q0FIRjtBQUlIQyxRQUFBQSxTQUFTLEVBQUU7QUFKUixPQUFQO0FBT0g7QUFqQkk7QUFEUyxDQUFsQjtBQXNCQSxJQUFNQyxNQUFNLEdBQUcsSUFBSWIsYUFBSixDQUFrQjtBQUMvQkMsRUFBQUEsUUFBUSxFQUFSQSxRQUQrQjtBQUUvQkMsRUFBQUEsU0FBUyxFQUFUQTtBQUYrQixDQUFsQixDQUFmO0FBS0FXLE1BQU0sQ0FBQ0MsS0FBUCxDQUFhLFlBQU07QUFDakJDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLHVEQUFaO0FBQ0QsQ0FGRCIsInNvdXJjZVJvb3QiOiIvaG9tZS92aXJnaWxlL0J1cmVhdS9kZXYvZ3JhcGhxbC1jb3Vyc2UvZ3JhcGhxay1iYXNpY3Mvc3JjLyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgR3JhcGhRTFNlcnZlciB9ID0gcmVxdWlyZSgnZ3JhcGhxbC15b2dhJylcbiBcbi8vIFR5cGUgRGVmaW5pdGlvbnNcbmNvbnN0IHR5cGVEZWZzID0gYFxuICB0eXBlIFF1ZXJ5IHtcbiAgICBtZTogVXNlciFcbiAgICBwb3N0OiBQb3N0IVxuICB9XG5cbiAgdHlwZSBVc2VyIHtcbiAgICAgIGlkOiBJRCFcbiAgICAgIG5hbWU6IFN0cmluZyFcbiAgICAgIGVtYWlsIDogU3RyaW5nIVxuICAgICAgYWdlOiBJbnRcbiAgfVxuICB0eXBlIFBvc3R7XG4gICAgICBpZDogSUQhXG4gICAgICB0aXRsZTogU3RyaW5nIVxuICAgICAgYm9keTogU3RyaW5nIVxuICAgICAgcHVibGlzaGVkOiBCb29sZWFuIVxuICB9XG5gXG4gXG4vLyBSZXNvbHZlcnNcbmNvbnN0IHJlc29sdmVycyA9IHtcbiAgUXVlcnk6IHtcbiAgICBtZTogKCkgPT4ge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgaWQ6ICcxMjMwOTgnLFxuICAgICAgICAgICAgbmFtZTogJ01pa2UnLFxuICAgICAgICAgICAgZW1haWw6ICdtaWtlQGV4ZW1wbGUuY29tJyxcbiAgICAgICAgICAgIGFnZTogMjlcbiAgICAgICAgfVxuICAgIH0sXG4gICAgcG9zdDooKSA9PiB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBpZDogJ3AwMjMzJyxcbiAgICAgICAgICAgIHRpdGxlOiAnSmUgc3VpcyBsZSB0aXRyZSBkdSBwb3N0JyxcbiAgICAgICAgICAgIGJvZHk6J2xvcmVtIGlwc3VtIGRvbG9yIHNpdCBhbWV0LCBjb25zZWN0ZXQnLFxuICAgICAgICAgICAgcHVibGlzaGVkOiB0cnVlXG5cbiAgICAgICAgfVxuICAgIH1cbiAgfSxcbn1cbiBcbmNvbnN0IHNlcnZlciA9IG5ldyBHcmFwaFFMU2VydmVyKHtcbiAgdHlwZURlZnMsXG4gIHJlc29sdmVycyxcbn0pXG4gXG5zZXJ2ZXIuc3RhcnQoKCkgPT4ge1xuICBjb25zb2xlLmxvZygnU2VydmVyIGlzIG5vdyB1cCBhbmQgcnVubmluZyBhdCBodHRwOi8vbG9jYWxob3N0OjQwMDAnKVxufSkiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "require",
        "GraphQLServer",
        "typeDefs",
        "resolvers",
        "Query",
        "me",
        "id",
        "name",
        "email",
        "age",
        "post",
        "title",
        "body",
        "published",
        "server",
        "start",
        "console",
        "log"
      ],
      "mappings": ";;AAAA,eAA0BA,OAAO,CAAC,cAAD,CAAjC;AAAA,IAAQC,aAAR,YAAQA,aAAR,C,CAEA;;;AACA,IAAMC,QAAQ,qQAAd,C,CAoBA;;AACA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,EAAE,EAAE,cAAM;AACN,aAAO;AACHC,QAAAA,EAAE,EAAE,QADD;AAEHC,QAAAA,IAAI,EAAE,MAFH;AAGHC,QAAAA,KAAK,EAAE,kBAHJ;AAIHC,QAAAA,GAAG,EAAE;AAJF,OAAP;AAMH,KARI;AASLC,IAAAA,IAAI,EAAC,gBAAM;AACP,aAAO;AACHJ,QAAAA,EAAE,EAAE,OADD;AAEHK,QAAAA,KAAK,EAAE,0BAFJ;AAGHC,QAAAA,IAAI,EAAC,uCAHF;AAIHC,QAAAA,SAAS,EAAE;AAJR,OAAP;AAOH;AAjBI;AADS,CAAlB;AAsBA,IAAMC,MAAM,GAAG,IAAIb,aAAJ,CAAkB;AAC/BC,EAAAA,QAAQ,EAARA,QAD+B;AAE/BC,EAAAA,SAAS,EAATA;AAF+B,CAAlB,CAAf;AAKAW,MAAM,CAACC,KAAP,CAAa,YAAM;AACjBC,EAAAA,OAAO,CAACC,GAAR,CAAY,uDAAZ;AACD,CAFD",
      "sourceRoot": "/home/virgile/Bureau/dev/graphql-course/graphqk-basics/src/",
      "sourcesContent": [
        "const { GraphQLServer } = require('graphql-yoga')\n \n// Type Definitions\nconst typeDefs = `\n  type Query {\n    me: User!\n    post: Post!\n  }\n\n  type User {\n      id: ID!\n      name: String!\n      email : String!\n      age: Int\n  }\n  type Post{\n      id: ID!\n      title: String!\n      body: String!\n      published: Boolean!\n  }\n`\n \n// Resolvers\nconst resolvers = {\n  Query: {\n    me: () => {\n        return {\n            id: '123098',\n            name: 'Mike',\n            email: 'mike@exemple.com',\n            age: 29\n        }\n    },\n    post:() => {\n        return {\n            id: 'p0233',\n            title: 'Je suis le titre du post',\n            body:'lorem ipsum dolor sit amet, consectet',\n            published: true\n\n        }\n    }\n  },\n}\n \nconst server = new GraphQLServer({\n  typeDefs,\n  resolvers,\n})\n \nserver.start(() => {\n  console.log('Server is now up and running at http://localhost:4000')\n})"
      ]
    },
    "sourceType": "script",
    "mtime": 1626866314034
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/virgile/Bureau/dev/GraphQlPlayground/graphql-course/graphqk-basics/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/virgile/Bureau/dev/GraphQlPlayground/graphql-course/graphqk-basics\",\"filename\":\"/home/virgile/Bureau/dev/GraphQlPlayground/graphql-course/graphqk-basics/src/index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/virgile/Bureau/dev/GraphQlPlayground/graphql-course/graphqk-basics\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.14.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/virgile/Bureau/dev/GraphQlPlayground/graphql-course/graphqk-basics/src/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/virgile/Bureau/dev/GraphQlPlayground/graphql-course/graphqk-basics",
      "filename": "/home/virgile/Bureau/dev/GraphQlPlayground/graphql-course/graphqk-basics/src/index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/virgile/Bureau/dev/GraphQlPlayground/graphql-course/graphqk-basics",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/virgile/Bureau/dev/GraphQlPlayground/graphql-course/graphqk-basics/src/index.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/virgile/Bureau/dev/GraphQlPlayground/graphql-course/graphqk-basics/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/virgile/Bureau/dev/GraphQlPlayground/graphql-course/graphqk-basics/src/",
        "sourceFileName": "index.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _require = require('graphql-yoga'),\n    GraphQLServer = _require.GraphQLServer; // Demo user data\n\n\nvar _comments = [{\n  id: '1',\n  text: 'Awesome article, i read it many times',\n  author: '1',\n  post: '1'\n}, {\n  id: '2',\n  text: 'Not the best article ever read, but it\\s ok ',\n  author: '2',\n  post: '2'\n}, {\n  id: '3',\n  text: 'I definetly prefer front end',\n  author: '3',\n  post: '3'\n}, {\n  id: '4',\n  text: 'hope you will give to us other article like this ',\n  author: '3',\n  post: '1'\n}];\nvar _users = [{\n  id: '1',\n  name: 'Virgile',\n  email: 'virgile@example.com',\n  age: 30\n}, {\n  id: '2',\n  name: 'Bruno',\n  email: 'bruno@example.com'\n}, {\n  id: '3',\n  name: 'Yann',\n  email: 'yann@example.com',\n  age: 31\n}];\nvar _posts = [{\n  id: '1',\n  title: 'Découverte de graphQl',\n  body: 'lorem ipsum dolor sit amet, consectet',\n  published: false,\n  author: '1'\n}, {\n  id: '2',\n  title: 'la phase caché de postgresQL',\n  body: 'lorem ipsum dolor sit amet, consectet',\n  published: true,\n  author: '1'\n}, {\n  id: '3',\n  title: 'Signature d\\'un cdi dans ma boite',\n  body: 'lorem ipsum dolor sit amet, consectet',\n  published: false,\n  author: '3'\n}]; // Type Definitions\n\nvar typeDefs = \"\\n  type Query {\\n    comments(query: String): [Comment!]!\\n    users(query: String): [User!]!\\n    posts(query: String): [Post!]!\\n    me: User!\\n    post: Post!\\n  }\\n\\n  type User {\\n    id: ID!\\n    name: String!\\n    email : String!\\n    age: Int\\n    posts: [Post!]!\\n    comments: [Comment]!\\n  }\\n  type Post{\\n    id: ID!\\n    title: String!\\n    body: String!\\n    published: Boolean!\\n    author: User!\\n    comments: [Comment]!\\n  }\\n  type Comment{\\n    id: ID!\\n    text: String!\\n    author: User!\\n    post: Post!\\n  }\\n\"; // Resolvers\n\nvar resolvers = {\n  Query: {\n    comments: function comments(parent, args, ctx, info) {\n      // return comments\n      if (!args.query) {\n        return _comments;\n      }\n\n      return _comments.filter(function (comment) {\n        var isTextMatch = comment.text.toLowerCase().includes(args.query.toLowerCase());\n        return isTextMatch;\n      });\n    },\n    posts: function posts(parent, args, ctx, info) {\n      if (!args.query) {\n        return _posts;\n      }\n\n      return _posts.filter(function (post) {\n        var isTitleMatch = post.title.toLocaleLowerCase().includes(args.query.toLowerCase());\n        var isBodyMatch = post.body.toLocaleLowerCase().includes(args.query.toLowerCase());\n        return isTitleMatch || isBodyMatch;\n      });\n    },\n    users: function users(parent, args, ctx, info) {\n      if (!args.query) {\n        return _users;\n      }\n\n      return _users.filter(function (user) {\n        return user.name.toLowerCase().includes(args.query.toLowerCase());\n      });\n    },\n    me: function me() {\n      return {\n        id: '123098',\n        name: 'Mike',\n        email: 'mike@exemple.com',\n        age: 29\n      };\n    },\n    post: function post() {\n      return {\n        id: 'p0233',\n        title: 'Je suis le titre du post',\n        body: 'lorem ipsum dolor sit amet, consectet',\n        published: true\n      };\n    }\n  },\n  Post: {\n    author: function author(parent, args, ctx, info) {\n      return _users.find(function (user) {\n        return user.id === parent.author;\n      });\n    },\n    comments: function comments(parent, args, ctx, info) {\n      return _comments.filter(function (comment) {\n        return comment.post === parent.id;\n      });\n    }\n  },\n  User: {\n    posts: function posts(parent, args, ctx, info) {\n      return _posts.filter(function (post) {\n        return post.author === parent.id;\n      });\n    },\n    comments: function comments(parent, args, ctx, info) {\n      return _comments.filter(function (comment) {\n        return comment.author === parent.id;\n      });\n    }\n  },\n  Comment: {\n    author: function author(parent, args, ctx, info) {\n      return _users.find(function (user) {\n        return user.id === parent.author;\n      });\n    },\n    post: function post(parent, args, ctx, info) {\n      return _posts.find(function (post) {\n        return post.id === parent.id;\n      });\n    }\n  }\n};\nvar server = new GraphQLServer({\n  typeDefs: typeDefs,\n  resolvers: resolvers\n});\nserver.start(function () {\n  console.log('Server is now up and running at http://localhost:4000');\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJHcmFwaFFMU2VydmVyIiwiY29tbWVudHMiLCJpZCIsInRleHQiLCJhdXRob3IiLCJwb3N0IiwidXNlcnMiLCJuYW1lIiwiZW1haWwiLCJhZ2UiLCJwb3N0cyIsInRpdGxlIiwiYm9keSIsInB1Ymxpc2hlZCIsInR5cGVEZWZzIiwicmVzb2x2ZXJzIiwiUXVlcnkiLCJwYXJlbnQiLCJhcmdzIiwiY3R4IiwiaW5mbyIsInF1ZXJ5IiwiZmlsdGVyIiwiY29tbWVudCIsImlzVGV4dE1hdGNoIiwidG9Mb3dlckNhc2UiLCJpbmNsdWRlcyIsImlzVGl0bGVNYXRjaCIsInRvTG9jYWxlTG93ZXJDYXNlIiwiaXNCb2R5TWF0Y2giLCJ1c2VyIiwibWUiLCJQb3N0IiwiZmluZCIsIlVzZXIiLCJDb21tZW50Iiwic2VydmVyIiwic3RhcnQiLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiOztBQUFBLGVBQTBCQSxPQUFPLENBQUMsY0FBRCxDQUFqQztBQUFBLElBQVFDLGFBQVIsWUFBUUEsYUFBUixDLENBRUE7OztBQUNBLElBQU1DLFNBQVEsR0FBRyxDQUFDO0FBQ2hCQyxFQUFBQSxFQUFFLEVBQUUsR0FEWTtBQUVoQkMsRUFBQUEsSUFBSSxFQUFFLHVDQUZVO0FBR2hCQyxFQUFBQSxNQUFNLEVBQUUsR0FIUTtBQUloQkMsRUFBQUEsSUFBSSxFQUFFO0FBSlUsQ0FBRCxFQUtkO0FBQ0RILEVBQUFBLEVBQUUsRUFBRyxHQURKO0FBRURDLEVBQUFBLElBQUksRUFBRSw4Q0FGTDtBQUdEQyxFQUFBQSxNQUFNLEVBQUUsR0FIUDtBQUlEQyxFQUFBQSxJQUFJLEVBQUU7QUFKTCxDQUxjLEVBVWQ7QUFDREgsRUFBQUEsRUFBRSxFQUFHLEdBREo7QUFFREMsRUFBQUEsSUFBSSxFQUFFLDhCQUZMO0FBR0RDLEVBQUFBLE1BQU0sRUFBQyxHQUhOO0FBSURDLEVBQUFBLElBQUksRUFBRTtBQUpMLENBVmMsRUFlZDtBQUNE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QUNZLE1BQUQsRUFBU0MsSUFBVCxFQUFlQyxHQUFmLEVBQW9CQyxJQUFwQixFQUE2QjtBQUNqQyxhQUFPVixNQUFLLENBQUN1QixJQUFOLENBQVcsVUFBQzVCLElBQUQsRUFBVTtBQUMxQixlQUFPQSxJQUFJLENBQUNILEVBQUwsS0FBWWUsTUFBTSxDQUFDZixFQUExQjtBQUNELE9BRk0sQ0FBUDtBQUdEO0FBVk07QUExRU8sQ0FBbEI7QUF3RkEsSUFBTWtDLE1BQU0sR0FBRyxJQUFJcEMsYUFBSixDQUFrQjtBQUMvQmMsRUFBQUEsUUFBUSxFQUFSQSxRQUQrQjtBQUUvQkMsRUFBQUEsU0FBUyxFQUFUQTtBQUYrQixDQUFsQixDQUFmO0FBS0FxQixNQUFNLENBQUNDLEtBQVAsQ0FBYSxZQUFNO0FBQ2pCQyxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSx1REFBWjtBQUNELENBRkQiLCJzb3VyY2VSb290IjoiL2hvbWUvdmlyZ2lsZS9CdXJlYXUvZGV2L0dyYXBoUWxQbGF5Z3JvdW5kL2dyYXBocWwtY291cnNlL2dyYXBocWstYmFzaWNzL3NyYy8iLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IEdyYXBoUUxTZXJ2ZXIgfSA9IHJlcXVpcmUoJ2dyYXBocWwteW9nYScpXG4gXG4vLyBEZW1vIHVzZXIgZGF0YVxuY29uc3QgY29tbWVudHMgPSBbe1xuICBpZDogJzEnLFxuICB0ZXh0OiAnQXdlc29tZSBhcnRpY2xlLCBpIHJlYWQgaXQgbWFueSB0aW1lcycsXG4gIGF1dGhvcjogJzEnLFxuICBwb3N0OiAnMSdcbn0sIHtcbiAgaWQgOiAnMicsXG4gIHRleHQ6ICdOb3QgdGhlIGJlc3QgYXJ0aWNsZSBldmVyIHJlYWQsIGJ1dCBpdFxccyBvayAnLFxuICBhdXRob3I6ICcyJyxcbiAgcG9zdDogJzInXG59LCB7XG4gIGlkIDogJzMnLFxuICB0ZXh0OiAnSSBkZWZpbmV0bHkgcHJlZmVyIGZyb250IGVuZCcsXG4gIGF1dGhvcjonMycsXG4gIHBvc3Q6ICczJ1xufSwge1xuICBpZDogJzQnLFxuICB0ZXh0OiAnaG9wZSB5b3Ugd2lsbCBnaXZlIHRvIHVzIG90aGVyIGFydGljbGUgbGlrZSB0aGlzICcsXG4gIGF1dGhvcjogJzMnLFxuICBwb3N0OiAnMSdcbn1dXG5cbmNvbnN0IHVzZXJzID0gW3tcbiAgaWQ6ICcxJyxcbiAgbmFtZTogJ1ZpcmdpbGUnLFxuICBlbWFpbDogJ3ZpcmdpbGVAZXhhbXBsZS5jb20nLFxuICBhZ2U6IDMwLFxufSwge1xuICBpZDogJzInLFxuICBuYW1lOiAnQnJ1bm8nLFxuICBlbWFpbDogJ2JydW5vQGV4YW1wbGUuY29tJyxcbn0sIHtcbiAgaWQ6JzMnLFxuICBuYW1lOiAnWWFubicsXG4gIGVtYWlsOiAneWFubkBleGFtcGxlLmNvbScsXG4gIGFnZTogMzEsXG59XVxuXG5jb25zdCBwb3N0cyA9IFt7XG4gIGlkOiAnMScsXG4gIHRpdGxlOiAnRMOpY291dmVydGUgZGUgZ3JhcGhRbCcsXG4gIGJvZHk6ICdsb3JlbSBpcHN1bSBkb2xvciBzaXQgYW1ldCwgY29uc2VjdGV0JyxcbiAgcHVibGlzaGVkOiBmYWxzZSxcbiAgYXV0aG9yOiAnMSdcbn0sIHtcbiAgaWQ6ICcyJyxcbiAgdGl0bGU6ICdsYSBwaGFzZSBjYWNow6kgZGUgcG9zdGdyZXNRTCcsXG4gIGJvZHk6ICdsb3JlbSBpcHN1bSBkb2xvciBzaXQgYW1ldCwgY29uc2VjdGV0JyxcbiAgcHVibGlzaGVkOiB0cnVlLFxuICBhdXRob3I6ICcxJ1xufSx7XG4gIGlkOiAnMycsXG4gIHRpdGxlOiAnU2lnbmF0dXJlIGRcXCd1biBjZGkgZGFucyBtYSBib2l0ZScsXG4gIGJvZHk6ICdsb3JlbSBpcHN1bSBkb2xvciBzaXQgYW1ldCwgY29uc2VjdGV0JyxcbiAgcHVibGlzaGVkOiBmYWxzZSxcbiAgYXV0aG9yOiAnMydcbn1dXG5cbi8vIFR5cGUgRGVmaW5pdGlvbnNcbmNvbnN0IHR5cGVEZWZzID0gYFxuICB0eXBlIFF1ZXJ5IHtcbiAgICBjb21tZW50cyhxdWVyeTogU3RyaW5nKTogW0NvbW1lbnQhXSFcbiAgICB1c2VycyhxdWVyeTogU3RyaW5nKTogW1VzZXIhXSFcbiAgICBwb3N0cyhxdWVyeTogU3RyaW5nKTogW1Bvc3QhXSFcbiAgICBtZTogVXNlciFcbiAgICBwb3N0OiBQb3N0IVxuICB9XG5cbiAgdHlwZSBVc2VyIHtcbiAgICBpZDogSUQhXG4gICAgbmFtZTogU3RyaW5nIVxuICAgIGVtYWlsIDogU3RyaW5nIVxuICAgIGFnZTogSW50XG4gICAgcG9zdHM6IFtQb3N0IV0hXG4gICAgY29tbWVudHM6IFtDb21tZW50XSFcbiAgfVxuICB0eXBlIFBvc3R7XG4gICAgaWQ6IElEIVxuICAgIHRpdGxlOiBTdHJpbmchXG4gICAgYm9keTogU3RyaW5nIVxuICAgIHB1Ymxpc2hlZDogQm9vbGVhbiFcbiAgICBhdXRob3I6IFVzZXIhXG4gICAgY29tbWVudHM6IFtDb21tZW50XSFcbiAgfVxuICB0eXBlIENvbW1lbnR7XG4gICAgaWQ6IElEIVxuICAgIHRleHQ6IFN0cmluZyFcbiAgICBhdXRob3I6IFVzZXIhXG4gICAgcG9zdDogUG9zdCFcbiAgfVxuYFxuIFxuLy8gUmVzb2x2ZXJzXG5jb25zdCByZXNvbHZlcnMgPSB7XG4gIFF1ZXJ5OiB7XG4gICAgY29tbWVudHM6IChwYXJlbnQsIGFyZ3MsIGN0eCwgaW5mbykgPT4ge1xuICAgICAgLy8gcmV0dXJuIGNvbW1lbnRzXG4gICAgICBpZighYXJncy5xdWVyeSl7XG4gICAgICAgIHJldHVybiBjb21tZW50c1xuICAgICAgfVxuICAgICAgcmV0dXJuIGNvbW1lbnRzLmZpbHRlcigoY29tbWVudCkgPT4ge1xuICAgICAgICBjb25zdCBpc1RleHRNYXRjaCA9IGNvbW1lbnQudGV4dC50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKGFyZ3MucXVlcnkudG9Mb3dlckNhc2UoKSlcbiAgICAgICAgcmV0dXJuIGlzVGV4dE1hdGNoXG4gICAgICB9KVxuICAgIH0sXG4gICAgcG9zdHM6IChwYXJlbnQsIGFyZ3MsIGN0eCwgaW5mbykgPT4ge1xuICAgICAgaWYoIWFyZ3MucXVlcnkpe1xuICAgICAgICByZXR1cm4gcG9zdHNcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHBvc3RzLmZpbHRlcigocG9zdCkgPT4ge1xuICAgICAgICBjb25zdCBpc1RpdGxlTWF0Y2ggPSBwb3N0LnRpdGxlLnRvTG9jYWxlTG93ZXJDYXNlKCkuaW5jbHVkZXMoYXJncy5xdWVyeS50b0xvd2VyQ2FzZSgpKVxuICAgICAgICBjb25zdCBpc0JvZHlNYXRjaCA9IHBvc3QuYm9keS50b0xvY2FsZUxvd2VyQ2FzZSgpLmluY2x1ZGVzKGFyZ3MucXVlcnkudG9Mb3dlckNhc2UoKSlcbiAgICAgICAgcmV0dXJuIGlzVGl0bGVNYXRjaCB8fCBpc0JvZHlNYXRjaFxuXG4gICAgICB9KVxuICAgIH0sXG4gICAgdXNlcnM6IChwYXJlbnQsIGFyZ3MsIGN0eCwgaW5mbykgPT4ge1xuICAgICAgaWYoIWFyZ3MucXVlcnkpe1xuICAgICAgICByZXR1cm4gdXNlcnNcbiAgICAgIH1cbiAgICAgIHJldHVybiB1c2Vycy5maWx0ZXIoKHVzZXIpID0+IHtcbiAgICAgICAgcmV0dXJuIHVzZXIubmFtZS50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKGFyZ3MucXVlcnkudG9Mb3dlckNhc2UoKSlcbiAgICAgIH0pXG4gICAgfSxcbiAgICBtZTogKCkgPT4ge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgaWQ6ICcxMjMwOTgnLFxuICAgICAgICAgICAgbmFtZTogJ01pa2UnLFxuICAgICAgICAgICAgZW1haWw6ICdtaWtlQGV4ZW1wbGUuY29tJyxcbiAgICAgICAgICAgIGFnZTogMjlcbiAgICAgICAgfVxuICAgIH0sXG4gICAgcG9zdDooKSA9PiB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBpZDogJ3AwMjMzJyxcbiAgICAgICAgICAgIHRpdGxlOiAnSmUgc3VpcyBsZSB0aXRyZSBkdSBwb3N0JyxcbiAgICAgICAgICAgIGJvZHk6J2xvcmVtIGlwc3VtIGRvbG9yIHNpdCBhbWV0LCBjb25zZWN0ZXQnLFxuICAgICAgICAgICAgcHVibGlzaGVkOiB0cnVlXG5cbiAgICAgICAgfVxuICAgIH1cbiAgfSxcbiAgUG9zdDoge1xuICAgIGF1dGhvcjogKHBhcmVudCwgYXJncywgY3R4LCBpbmZvKSA9PiB7XG4gICAgICByZXR1cm4gdXNlcnMuZmluZCgodXNlcikgPT4ge1xuICAgICAgICByZXR1cm4gdXNlci5pZCA9PT0gcGFyZW50LmF1dGhvclxuICAgICAgfSlcbiAgICB9LFxuICAgIGNvbW1lbnRzOiAocGFyZW50LCBhcmdzLCBjdHgsIGluZm8pID0+IHtcbiAgICAgIHJldHVybiBjb21tZW50cy5maWx0ZXIoKGNvbW1lbnQpID0+IHtcbiAgICAgICAgcmV0dXJuIGNvbW1lbnQucG9zdCA9PT0gcGFyZW50LmlkXG4gICAgICB9KVxuICAgIH1cbiAgfSxcbiAgVXNlcjoge1xuICAgIHBvc3RzKHBhcmVudCwgYXJncywgY3R4LCBpbmZvKXtcbiAgICAgIHJldHVybiBwb3N0cy5maWx0ZXIoKHBvc3QpID0+IHtcbiAgICAgICAgcmV0dXJuIHBvc3QuYXV0aG9yID09PSBwYXJlbnQuaWRcbiAgICAgIH0pXG4gICAgfSxcbiAgICBjb21tZW50cyhwYXJlbnQsIGFyZ3MsIGN0eCwgaW5mbyl7XG4gICAgICByZXR1cm4gY29tbWVudHMuZmlsdGVyKChjb21tZW50KT0+IHtcbiAgICAgICAgcmV0dXJuIGNvbW1lbnQuYXV0aG9yID09PSBwYXJlbnQuaWRcbiAgICAgIH0pXG4gICAgfVxuICB9LFxuICBDb21tZW50OiB7XG4gICAgYXV0aG9yOiAocGFyZW50LCBhcmdzLCBjdHgsIGluZm8pID0+IHtcbiAgICAgIHJldHVybiB1c2Vycy5maW5kKCh1c2VyKSA9PiB7XG4gICAgICAgIHJldHVybiB1c2VyLmlkID09PSBwYXJlbnQuYXV0aG9yXG4gICAgICB9KVxuICAgIH0sXG4gICAgcG9zdDogKHBhcmVudCwgYXJncywgY3R4LCBpbmZvKSA9PiB7XG4gICAgICByZXR1cm4gcG9zdHMuZmluZCgocG9zdCkgPT4ge1xuICAgICAgICByZXR1cm4gcG9zdC5pZCA9PT0gcGFyZW50LmlkXG4gICAgICB9KVxuICAgIH1cbiAgfVxufVxuIFxuY29uc3Qgc2VydmVyID0gbmV3IEdyYXBoUUxTZXJ2ZXIoe1xuICB0eXBlRGVmcyxcbiAgcmVzb2x2ZXJzLFxufSlcbiBcbnNlcnZlci5zdGFydCgoKSA9PiB7XG4gIGNvbnNvbGUubG9nKCdTZXJ2ZXIgaXMgbm93IHVwIGFuZCBydW5uaW5nIGF0IGh0dHA6Ly9sb2NhbGhvc3Q6NDAwMCcpXG59KSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "require",
        "GraphQLServer",
        "comments",
        "id",
        "text",
        "author",
        "post",
        "users",
        "name",
        "email",
        "age",
        "posts",
        "title",
        "body",
        "published",
        "typeDefs",
        "resolvers",
        "Query",
        "parent",
        "args",
        "ctx",
        "info",
        "query",
        "filter",
        "comment",
        "isTextMatch",
        "toLowerCase",
        "includes",
        "isTitleMatch",
        "toLocaleLowerCase",
        "isBodyMatch",
        "user",
        "me",
        "Post",
        "find",
        "User",
        "Comment",
        "server",
        "start",
        "console",
        "log"
      ],
      "mappings": ";;AAAA,eAA0BA,OAAO,CAAC,cAAD,CAAjC;AAAA,IAAQC,aAAR,YAAQA,aAAR,C,CAEA;;;AACA,IAAMC,SAAQ,GAAG,CAAC;AAChBC,EAAAA,EAAE,EAAE,GADY;AAEhBC,EAAAA,IAAI,EAAE,uCAFU;AAGhBC,EAAAA,MAAM,EAAE,GAHQ;AAIhBC,EAAAA,IAAI,EAAE;AAJU,CAAD,EAKd;AACDH,EAAAA,EAAE,EAAG,GADJ;AAEDC,EAAAA,IAAI,EAAE,8CAFL;AAGDC,EAAAA,MAAM,EAAE,GAHP;AAIDC,EAAAA,IAAI,EAAE;AAJL,CALc,EAUd;AACDH,EAAAA,EAAE,EAAG,GADJ;AAEDC,EAAAA,IAAI,EAAE,8BAFL;AAGDC,EAAAA,MAAM,EAAC,GAHN;AAIDC,EAAAA,IAAI,EAAE;AAJL,CAVc,EAed;AACDH,EAAAA,EAAE,EAAE,GADH;AAEDC,EAAAA,IAAI,EAAE,mDAFL;AAGDC,EAAAA,MAAM,EAAE,GAHP;AAIDC,EAAAA,IAAI,EAAE;AAJL,CAfc,CAAjB;AAsBA,IAAMC,MAAK,GAAG,CAAC;AACbJ,EAAAA,EAAE,EAAE,GADS;AAEbK,EAAAA,IAAI,EAAE,SAFO;AAGbC,EAAAA,KAAK,EAAE,qBAHM;AAIbC,EAAAA,GAAG,EAAE;AAJQ,CAAD,EAKX;AACDP,EAAAA,EAAE,EAAE,GADH;AAEDK,EAAAA,IAAI,EAAE,OAFL;AAGDC,EAAAA,KAAK,EAAE;AAHN,CALW,EASX;AACDN,EAAAA,EAAE,EAAC,GADF;AAEDK,EAAAA,IAAI,EAAE,MAFL;AAGDC,EAAAA,KAAK,EAAE,kBAHN;AAIDC,EAAAA,GAAG,EAAE;AAJJ,CATW,CAAd;AAgBA,IAAMC,MAAK,GAAG,CAAC;AACbR,EAAAA,EAAE,EAAE,GADS;AAEbS,EAAAA,KAAK,EAAE,uBAFM;AAGbC,EAAAA,IAAI,EAAE,uCAHO;AAIbC,EAAAA,SAAS,EAAE,KAJE;AAKbT,EAAAA,MAAM,EAAE;AALK,CAAD,EAMX;AACDF,EAAAA,EAAE,EAAE,GADH;AAEDS,EAAAA,KAAK,EAAE,8BAFN;AAGDC,EAAAA,IAAI,EAAE,uCAHL;AAIDC,EAAAA,SAAS,EAAE,IAJV;AAKDT,EAAAA,MAAM,EAAE;AALP,CANW,EAYZ;AACAF,EAAAA,EAAE,EAAE,GADJ;AAEAS,EAAAA,KAAK,EAAE,mCAFP;AAGAC,EAAAA,IAAI,EAAE,uCAHN;AAIAC,EAAAA,SAAS,EAAE,KAJX;AAKAT,EAAAA,MAAM,EAAE;AALR,CAZY,CAAd,C,CAoBA;;AACA,IAAMU,QAAQ,6hBAAd,C,CAiCA;;AACA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAE;AACLf,IAAAA,QAAQ,EAAE,kBAACgB,MAAD,EAASC,IAAT,EAAeC,GAAf,EAAoBC,IAApB,EAA6B;AACrC;AACA,UAAG,CAACF,IAAI,CAACG,KAAT,EAAe;AACb,eAAOpB,SAAP;AACD;;AACD,aAAOA,SAAQ,CAACqB,MAAT,CAAgB,UAACC,OAAD,EAAa;AAClC,YAAMC,WAAW,GAAGD,OAAO,CAACpB,IAAR,CAAasB,WAAb,GAA2BC,QAA3B,CAAoCR,IAAI,CAACG,KAAL,CAAWI,WAAX,EAApC,CAApB;AACA,eAAOD,WAAP;AACD,OAHM,CAAP;AAID,KAVI;AAWLd,IAAAA,KAAK,EAAE,eAACO,MAAD,EAASC,IAAT,EAAeC,GAAf,EAAoBC,IAApB,EAA6B;AAClC,UAAG,CAACF,IAAI,CAACG,KAAT,EAAe;AACb,eAAOX,MAAP;AACD;;AAED,aAAOA,MAAK,CAACY,MAAN,CAAa,UAACjB,IAAD,EAAU;AAC5B,YAAMsB,YAAY,GAAGtB,IAAI,CAACM,KAAL,CAAWiB,iBAAX,GAA+BF,QAA/B,CAAwCR,IAAI,CAACG,KAAL,CAAWI,WAAX,EAAxC,CAArB;AACA,YAAMI,WAAW,GAAGxB,IAAI,CAACO,IAAL,CAAUgB,iBAAV,GAA8BF,QAA9B,CAAuCR,IAAI,CAACG,KAAL,CAAWI,WAAX,EAAvC,CAApB;AACA,eAAOE,YAAY,IAAIE,WAAvB;AAED,OALM,CAAP;AAMD,KAtBI;AAuBLvB,IAAAA,KAAK,EAAE,eAACW,MAAD,EAASC,IAAT,EAAeC,GAAf,EAAoBC,IAApB,EAA6B;AAClC,UAAG,CAACF,IAAI,CAACG,KAAT,EAAe;AACb,eAAOf,MAAP;AACD;;AACD,aAAOA,MAAK,CAACgB,MAAN,CAAa,UAACQ,IAAD,EAAU;AAC5B,eAAOA,IAAI,CAACvB,IAAL,CAAUkB,WAAV,GAAwBC,QAAxB,CAAiCR,IAAI,CAACG,KAAL,CAAWI,WAAX,EAAjC,CAAP;AACD,OAFM,CAAP;AAGD,KA9BI;AA+BLM,IAAAA,EAAE,EAAE,cAAM;AACN,aAAO;AACH7B,QAAAA,EAAE,EAAE,QADD;AAEHK,QAAAA,IAAI,EAAE,MAFH;AAGHC,QAAAA,KAAK,EAAE,kBAHJ;AAIHC,QAAAA,GAAG,EAAE;AAJF,OAAP;AAMH,KAtCI;AAuCLJ,IAAAA,IAAI,EAAC,gBAAM;AACP,aAAO;AACHH,QAAAA,EAAE,EAAE,OADD;AAEHS,QAAAA,KAAK,EAAE,0BAFJ;AAGHC,QAAAA,IAAI,EAAC,uCAHF;AAIHC,QAAAA,SAAS,EAAE;AAJR,OAAP;AAOH;AA/CI,GADS;AAkDhBmB,EAAAA,IAAI,EAAE;AACJ5B,IAAAA,MAAM,EAAE,gBAACa,MAAD,EAASC,IAAT,EAAeC,GAAf,EAAoBC,IAApB,EAA6B;AACnC,aAAOd,MAAK,CAAC2B,IAAN,CAAW,UAACH,IAAD,EAAU;AAC1B,eAAOA,IAAI,CAAC5B,EAAL,KAAYe,MAAM,CAACb,MAA1B;AACD,OAFM,CAAP;AAGD,KALG;AAMJH,IAAAA,QAAQ,EAAE,kBAACgB,MAAD,EAASC,IAAT,EAAeC,GAAf,EAAoBC,IAApB,EAA6B;AACrC,aAAOnB,SAAQ,CAACqB,MAAT,CAAgB,UAACC,OAAD,EAAa;AAClC,eAAOA,OAAO,CAAClB,IAAR,KAAiBY,MAAM,CAACf,EAA/B;AACD,OAFM,CAAP;AAGD;AAVG,GAlDU;AA8DhBgC,EAAAA,IAAI,EAAE;AACJxB,IAAAA,KADI,iBACEO,MADF,EACUC,IADV,EACgBC,GADhB,EACqBC,IADrB,EAC0B;AAC5B,aAAOV,MAAK,CAACY,MAAN,CAAa,UAACjB,IAAD,EAAU;AAC5B,eAAOA,IAAI,CAACD,MAAL,KAAgBa,MAAM,CAACf,EAA9B;AACD,OAFM,CAAP;AAGD,KALG;AAMJD,IAAAA,QANI,oBAMKgB,MANL,EAMaC,IANb,EAMmBC,GANnB,EAMwBC,IANxB,EAM6B;AAC/B,aAAOnB,SAAQ,CAACqB,MAAT,CAAgB,UAACC,OAAD,EAAY;AACjC,eAAOA,OAAO,CAACnB,MAAR,KAAmBa,MAAM,CAACf,EAAjC;AACD,OAFM,CAAP;AAGD;AAVG,GA9DU;AA0EhBiC,EAAAA,OAAO,EAAE;AACP/B,IAAAA,MAAM,EAAE,gBAACa,MAAD,EAASC,IAAT,EAAeC,GAAf,EAAoBC,IAApB,EAA6B;AACnC,aAAOd,MAAK,CAAC2B,IAAN,CAAW,UAACH,IAAD,EAAU;AAC1B,eAAOA,IAAI,CAAC5B,EAAL,KAAYe,MAAM,CAACb,MAA1B;AACD,OAFM,CAAP;AAGD,KALM;AAMPC,IAAAA,IAAI,EAAE,cAACY,MAAD,EAASC,IAAT,EAAeC,GAAf,EAAoBC,IAApB,EAA6B;AACjC,aAAOV,MAAK,CAACuB,IAAN,CAAW,UAAC5B,IAAD,EAAU;AAC1B,eAAOA,IAAI,CAACH,EAAL,KAAYe,MAAM,CAACf,EAA1B;AACD,OAFM,CAAP;AAGD;AAVM;AA1EO,CAAlB;AAwFA,IAAMkC,MAAM,GAAG,IAAIpC,aAAJ,CAAkB;AAC/Bc,EAAAA,QAAQ,EAARA,QAD+B;AAE/BC,EAAAA,SAAS,EAATA;AAF+B,CAAlB,CAAf;AAKAqB,MAAM,CAACC,KAAP,CAAa,YAAM;AACjBC,EAAAA,OAAO,CAACC,GAAR,CAAY,uDAAZ;AACD,CAFD",
      "sourceRoot": "/home/virgile/Bureau/dev/GraphQlPlayground/graphql-course/graphqk-basics/src/",
      "sourcesContent": [
        "const { GraphQLServer } = require('graphql-yoga')\n \n// Demo user data\nconst comments = [{\n  id: '1',\n  text: 'Awesome article, i read it many times',\n  author: '1',\n  post: '1'\n}, {\n  id : '2',\n  text: 'Not the best article ever read, but it\\s ok ',\n  author: '2',\n  post: '2'\n}, {\n  id : '3',\n  text: 'I definetly prefer front end',\n  author:'3',\n  post: '3'\n}, {\n  id: '4',\n  text: 'hope you will give to us other article like this ',\n  author: '3',\n  post: '1'\n}]\n\nconst users = [{\n  id: '1',\n  name: 'Virgile',\n  email: 'virgile@example.com',\n  age: 30,\n}, {\n  id: '2',\n  name: 'Bruno',\n  email: 'bruno@example.com',\n}, {\n  id:'3',\n  name: 'Yann',\n  email: 'yann@example.com',\n  age: 31,\n}]\n\nconst posts = [{\n  id: '1',\n  title: 'Découverte de graphQl',\n  body: 'lorem ipsum dolor sit amet, consectet',\n  published: false,\n  author: '1'\n}, {\n  id: '2',\n  title: 'la phase caché de postgresQL',\n  body: 'lorem ipsum dolor sit amet, consectet',\n  published: true,\n  author: '1'\n},{\n  id: '3',\n  title: 'Signature d\\'un cdi dans ma boite',\n  body: 'lorem ipsum dolor sit amet, consectet',\n  published: false,\n  author: '3'\n}]\n\n// Type Definitions\nconst typeDefs = `\n  type Query {\n    comments(query: String): [Comment!]!\n    users(query: String): [User!]!\n    posts(query: String): [Post!]!\n    me: User!\n    post: Post!\n  }\n\n  type User {\n    id: ID!\n    name: String!\n    email : String!\n    age: Int\n    posts: [Post!]!\n    comments: [Comment]!\n  }\n  type Post{\n    id: ID!\n    title: String!\n    body: String!\n    published: Boolean!\n    author: User!\n    comments: [Comment]!\n  }\n  type Comment{\n    id: ID!\n    text: String!\n    author: User!\n    post: Post!\n  }\n`\n \n// Resolvers\nconst resolvers = {\n  Query: {\n    comments: (parent, args, ctx, info) => {\n      // return comments\n      if(!args.query){\n        return comments\n      }\n      return comments.filter((comment) => {\n        const isTextMatch = comment.text.toLowerCase().includes(args.query.toLowerCase())\n        return isTextMatch\n      })\n    },\n    posts: (parent, args, ctx, info) => {\n      if(!args.query){\n        return posts\n      }\n\n      return posts.filter((post) => {\n        const isTitleMatch = post.title.toLocaleLowerCase().includes(args.query.toLowerCase())\n        const isBodyMatch = post.body.toLocaleLowerCase().includes(args.query.toLowerCase())\n        return isTitleMatch || isBodyMatch\n\n      })\n    },\n    users: (parent, args, ctx, info) => {\n      if(!args.query){\n        return users\n      }\n      return users.filter((user) => {\n        return user.name.toLowerCase().includes(args.query.toLowerCase())\n      })\n    },\n    me: () => {\n        return {\n            id: '123098',\n            name: 'Mike',\n            email: 'mike@exemple.com',\n            age: 29\n        }\n    },\n    post:() => {\n        return {\n            id: 'p0233',\n            title: 'Je suis le titre du post',\n            body:'lorem ipsum dolor sit amet, consectet',\n            published: true\n\n        }\n    }\n  },\n  Post: {\n    author: (parent, args, ctx, info) => {\n      return users.find((user) => {\n        return user.id === parent.author\n      })\n    },\n    comments: (parent, args, ctx, info) => {\n      return comments.filter((comment) => {\n        return comment.post === parent.id\n      })\n    }\n  },\n  User: {\n    posts(parent, args, ctx, info){\n      return posts.filter((post) => {\n        return post.author === parent.id\n      })\n    },\n    comments(parent, args, ctx, info){\n      return comments.filter((comment)=> {\n        return comment.author === parent.id\n      })\n    }\n  },\n  Comment: {\n    author: (parent, args, ctx, info) => {\n      return users.find((user) => {\n        return user.id === parent.author\n      })\n    },\n    post: (parent, args, ctx, info) => {\n      return posts.find((post) => {\n        return post.id === parent.id\n      })\n    }\n  }\n}\n \nconst server = new GraphQLServer({\n  typeDefs,\n  resolvers,\n})\n \nserver.start(() => {\n  console.log('Server is now up and running at http://localhost:4000')\n})"
      ]
    },
    "sourceType": "script",
    "mtime": 1626876059935
  }
}